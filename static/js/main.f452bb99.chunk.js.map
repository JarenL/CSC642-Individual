{"version":3,"sources":["logo.svg","features/counter/Counter.module.css","features/counter/counterSlice.js","components/AppBar.js","components/styles.js","components/InputForm.js","components/Map.js","components/Submit.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","btn","light","dark","css","btnDefault","btnPrimary","styled","div","Recaptcha","require","required","undefined","mustBeNumber","isNaN","mustBeEmail","includes","mustBePhone","length","maxLength","zipLength","composeValidators","validators","reduce","error","validator","callback","console","log","verifyCallback","response","InputForm","props","onSubmit","data","submit","render","handleSubmit","form","submitting","pristine","values","component","validate","input","meta","type","placeholder","touched","disabled","onClick","reset","sitekey","hl","onloadCallback","MapWrapper","Map","GoogleMapExample","withGoogleMap","defaultCenter","lat","lng","defaultZoom","containerElement","style","height","width","mapElement","Component","Split","SplitContent","p","Submit","firstName","lastName","address","zip","phoneNumber","email","birthDay","birthMonth","toString","birthYear","education","heightFeet","heightInches","App","setState","formData","history","push","exact","path","withRouter","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+KAAAA,EAAOC,QAAU,IAA0B,kC,yCCC3CD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,qD,8JCCjJC,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,GAETC,SAAU,CACRC,UAAW,SAAAC,GAKTA,EAAMH,OAAS,GAEjBI,UAAW,SAAAD,GACTA,EAAMH,OAAS,GAEjBK,kBAAmB,SAACF,EAAOG,GACzBH,EAAMH,OAASM,EAAOC,Y,EAK+BX,EAAaY,QAiBzDZ,G,EAjBAM,U,EAAWE,U,EAAWC,kBAiBtBT,EAAf,S,qDChCMa,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IACtB,IAAMC,EAAUV,IAEhB,OACE,yBAAKW,UAAWD,EAAQP,MACtB,kBAACS,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KAIE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQF,OAA5C,oC,gjFC7BV,IAAMS,EAAM,SAACC,EAAOC,GAAR,OAAiBC,YAAhB,IAUyBF,EAAUC,EAC1BA,EAEkBD,EAAUC,EAERD,EAAUC,IAY9CE,EAAaD,YAAH,IACZH,EAAI,UAAW,YAGbK,EAAaL,EAAI,UAAW,WAEnBM,MAAOC,IAAtB,IAkFUF,EAGAD,G,QClHJI,EAAYC,EAAQ,KAUpBC,EAAW,SAACpC,GAAD,OAAYA,OAAQqC,EAAY,YAC3CC,EAAe,SAACtC,GAAD,OAAYuC,MAAMvC,GAAS,wBAAqBqC,GAC/DG,EAAc,SAACxC,GAAD,OAAaA,EAAMyC,SAAS,UAAmBJ,EAAZ,WACjDK,EAAc,SAAC1C,GAAD,OAClBuC,MAAMvC,IAAUA,EAAM2C,OAAS,GAAK3C,EAAM2C,OAAS,EAAI,eAAYN,GAC/DO,EAAY,SAAC5C,GAAD,OAChBA,EAAM2C,OAAS,GAAK,0BAAuBN,GACvCQ,EAAY,SAAC7C,GAAD,OAChBA,EAAM2C,OAAS,GAAK3C,EAAM2C,OAAS,GAAKJ,MAAMvC,GAAS,eAAYqC,GAG/DS,EAAoB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAmB,SAAC/C,GAAD,OAC3C+C,EAAWC,QAAO,SAACC,EAAOC,GAAR,OAAsBD,GAASC,EAAUlD,UAAQqC,KAGjEc,EAAW,WACbC,QAAQC,IAAI,aAIVC,EAAiB,SAASC,GAC5BH,QAAQC,IAAIE,IAyKCC,EAtKG,SAACC,GAAD,OAChB,kBAAC,EAAD,KACE,kBAAC,IAAD,CACEC,SAAU,SAACC,GAAD,OAAUF,EAAMG,OAAOD,IACjCE,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,SAAnC,EAA6CC,OAA7C,OACN,0BAAMR,SAAUI,GACd,kBAAC,IAAD,CACEhE,KAAK,YACLqE,UAAU,QACVC,SAAUtB,EAAkBV,EAAUQ,KAErC,gBAAGyB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,6BACE,8CACA,2CAAWD,EAAX,CAAkBE,KAAK,OAAOC,YAAY,gBACzCF,EAAKrB,OAASqB,EAAKG,SAAW,8BAAOH,EAAKrB,WAIjD,6BACE,6CACA,kBAAC,IAAD,CACEnD,KAAK,aACLqE,UAAU,QACVI,KAAK,OACLC,YAAY,QACZJ,SAAUtB,EAAkBV,EAAUE,KAExC,kBAAC,IAAD,CACExC,KAAK,WACLqE,UAAU,QACVI,KAAK,OACLC,YAAY,MACZJ,SAAUtB,EAAkBV,EAAUE,KAExC,kBAAC,IAAD,CACExC,KAAK,YACLqE,UAAU,QACVI,KAAK,OACLC,YAAY,OACZJ,SAAUtB,EAAkBV,EAAUE,MAI1C,kBAAC,IAAD,CACExC,KAAK,WACLqE,UAAU,QACVC,SAAUtB,EAAkBV,EAAUQ,KAErC,gBAAGyB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,6BACE,6CACA,2CAAWD,EAAX,CAAkBE,KAAK,OAAOC,YAAY,eACzCF,EAAKrB,OAASqB,EAAKG,SAAW,8BAAOH,EAAKrB,WAIjD,kBAAC,IAAD,CACEnD,KAAK,UACLqE,UAAU,QACVC,SAAUtB,EAAkBV,EAAUQ,KAErC,gBAAGyB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,6BACE,2CACA,2CAAWD,EAAX,CAAkBE,KAAK,OAAOC,YAAY,aACzCF,EAAKrB,OAASqB,EAAKG,SAAW,8BAAOH,EAAKrB,WAIjD,kBAAC,IAAD,CACEnD,KAAK,MACLqE,UAAU,QACVC,SAAUtB,EAAkBV,EAAUS,KAErC,gBAAGwB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,6BACE,uCACA,2CAAWD,EAAX,CAAkBE,KAAK,OAAOC,YAAY,SACzCF,EAAKrB,OAASqB,EAAKG,SAAW,8BAAOH,EAAKrB,WAIjD,6BACE,4CACA,kBAAC,IAAD,CAAOnD,KAAK,YAAYqE,UAAU,UAChC,iCACA,+CACA,2CACA,4CACA,0CAGJ,6BACE,yCACA,kBAAC,IAAD,CACErE,KAAK,aACLqE,UAAU,QACVI,KAAK,OACLC,YAAY,SAEd,kBAAC,IAAD,CACE1E,KAAK,eACLqE,UAAU,QACVI,KAAK,OACLC,YAAY,UAGhB,kBAAC,IAAD,CACE1E,KAAK,cACLqE,UAAU,QACVC,SAAUtB,EAAkBV,EAAUM,KAErC,gBAAG2B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,6BACE,yCACA,2CAAWD,EAAX,CAAkBE,KAAK,OAAOC,YAAY,aACzCF,EAAKrB,OAASqB,EAAKG,SAAW,8BAAOH,EAAKrB,WAKjD,kBAAC,IAAD,CACEnD,KAAK,QACLqE,UAAU,QACVC,SAAUtB,EAAkBV,EAAUI,KAErC,gBAAG6B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,6BACE,yCACA,2CAAWD,EAAX,CAAkBE,KAAK,OAAOC,YAAY,WACzCF,EAAKrB,OAASqB,EAAKG,SAAW,8BAAOH,EAAKrB,WAIjD,6BACE,oDACA,kBAAC,IAAD,CAAOnD,KAAK,kBAAkBqE,UAAU,QAAQI,KAAK,cAEvD,yBAAKnD,UAAU,WACb,4BAAQmD,KAAK,SAASG,SAAUV,GAAcC,GAA9C,UAGA,4BACEM,KAAK,SACLI,QAASZ,EAAKa,MACdF,SAAUV,GAAcC,GAH1B,UAQF,kBAAC/B,EAAD,CACE2C,QAAQ,2CACRhB,OAAO,WACPiB,GAAI,KACJnE,MAAM,OACN2C,eAAgBA,EAChByB,eAAgB5B,U,gMCjM5B,IAAM6B,EAAahD,IAAOC,IAAV,KA0BDgD,E,uKAhBX,IAAMC,EAAmBC,yBAAc,SAAC1B,GAAD,OACrC,kBAAC,YAAD,CACE2B,cAAe,CAAEC,IAAK,UAAWC,KAAM,WACvCC,YAAa,QAGjB,OACE,kBAACP,EAAD,KACE,kBAACE,EAAD,CACEM,iBAAkB,yBAAKC,MAAO,CAAEC,OAAO,QAAUC,MAAO,WACxDC,WAAY,yBAAKH,MAAO,CAAEC,OAAO,iB,GAZzBG,a,OCJZC,EAAQ9D,IAAOC,IAAV,mEAAGD,CAAH,2NAmBL+D,EAAe/D,IAAOgE,EAAV,0EAAGhE,CAAH,kDAyEHiE,GAjEKjE,IAAOC,IAAV,yEAAGD,CAAH,iBAOF,SAACyB,GACdL,QAAQC,IAAII,GACZ,IAAM3D,EAAO2D,EAAME,KAAKuC,UAAY,IAAMzC,EAAME,KAAKwC,SAC/CC,EAAU3C,EAAME,KAAKyC,QAAU,IAAM3C,EAAME,KAAK0C,IAChDC,EAAc7C,EAAME,KAAK2C,YACzBC,EAAQ9C,EAAME,KAAK4C,MACnBC,EACJ/C,EAAME,KAAK8C,WAAWC,WACtB,IACAjD,EAAME,KAAK6C,SAASE,WACpB,IACAjD,EAAME,KAAKgD,UAAUD,WACjBE,OACqBvE,IAAzBoB,EAAME,KAAKiD,UAA0BnD,EAAME,KAAKiD,UAAY,OACxDlB,OACsBrD,IAA1BoB,EAAME,KAAKkD,WACPpD,EAAME,KAAKkD,WAAWH,WAAa,IAAMjD,EAAME,KAAKmD,aAAe,IACnE,OAEN,OAEE,oCACE,yDAA+BhH,GAC/B,kBAACgG,EAAD,KACE,kBAACC,EAAD,aACA,kBAACA,EAAD,KAAejG,IAEjB,kBAACgG,EAAD,KACE,kBAACC,EAAD,kBACA,kBAACA,EAAD,KAAeS,IAEjB,kBAACV,EAAD,KAEA,kBAACC,EAAD,eACA,kBAACA,EAAD,KAAeL,IAGf,kBAACI,EAAD,KACE,kBAACC,EAAD,gBACA,kBAACA,EAAD,KAAeK,IAEjB,kBAACN,EAAD,KACE,kBAACC,EAAD,cACA,kBAACA,EAAD,KAAeQ,IAEjB,kBAACT,EAAD,KACE,kBAACC,EAAD,cACA,kBAACA,EAAD,KAAeO,IAEjB,kBAACR,EAAD,KACE,kBAACC,EAAD,kBACA,kBAACA,EAAD,KAAea,O,iJClFvB,IAAM5B,EAAahD,IAAOC,IAAV,KAMV8E,E,kDACJ,WAAYtD,GAAQ,IAAD,8BACjB,cAAMA,IAiBRC,SAAW,SAACC,GACVP,QAAQC,IAAIM,GACZ,EAAKqD,SAAS,CACZC,SAAUtD,IAEZ,EAAKF,MAAMyD,QAAQC,KAAK,YArBxB,EAAKhH,MAAQ,CACX8G,SAAU,CACRf,UAAW,QACXO,WAAY,IACZD,SAAU,IACVG,UAAW,IACXR,SAAU,QACVE,IAAK,QACLD,QAAS,kBACTE,YAAa,UACbC,MAAO,4BAZM,E,qDA0BT,IAAD,OACP,OACE,yBAAKnF,UAAU,OACb,kBAAC,IAAD,CAAO+C,UAAWjD,IAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkG,OAAK,EACLC,KAAK,IAELlD,UAAW,kBAAM,kBAAC,EAAD,CAAWP,OAAQ,EAAKF,cAE3C,kBAAC,IAAD,CACE2D,KAAK,UAELlD,UAAW,kBACT,oCACE,kBAAC,EAAD,CAAQR,KAAM,EAAKxD,MAAM8G,WACzB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAKA,SAAU,EAAK9G,MAAM8G,sB,GA7C1BpB,aAwDHyB,eAAWP,GCtEXQ,eAAe,CAC5BC,QAAS,CACPC,QAASC,KCOOC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCTNC,IAASnE,OACP,kBAAC,IAAMoE,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,KAAD,KACE,kBAAC,GAAD,SAINC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f452bb99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\" className={classes.title}>\n            CSC-842 Individual Assignment\n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import styled, { css } from 'styled-components'\n\nconst btn = (light, dark) => css`\n  white-space: nowrap;\n  display: inline-block;\n  border-radius: 5px;\n  padding: 5px 15px;\n  font-size: 16px;\n  color: white;\n  &:visited {\n    color: white;\n  }\n  background-image: linear-gradient(${light}, ${dark});\n  border: 1px solid ${dark};\n  &:hover {\n    background-image: linear-gradient(${light}, ${dark});\n    &[disabled] {\n      background-image: linear-gradient(${light}, ${dark});\n    }\n  }\n  &:visited {\n    color: black;\n  }\n  &[disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`\n\nconst btnDefault = css`\n  ${btn('#ffffff', '#d5d5d5')} color: #555;\n`\n\nconst btnPrimary = btn('#4f93ce', '#285f8f')\n\nexport default styled.div`\n  font-family: sans-serif;\n\n  h1 {\n    text-align: center;\n    color: #222;\n  }\n\n  & > div {\n    text-align: center;\n  }\n\n  a {\n    display: block;\n    text-align: center;\n    color: #222;\n  }\n\n  form {\n    width: 90%;\n    margin: 10px auto;\n    border: 1px solid #ccc;\n    padding: 20px;\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);\n    border-radius: 3px;\n    @media (min-width: 600px) {\n      width: 50%;\n    }\n\n    & > div {\n      display: flex;\n      flex-flow: row wrap;\n      line-height: 2em;\n      margin: 5px;\n      & > label {\n        color: #333;\n        width: 30%;\n        font-size: 0.75em;\n        // line-height: 32px;\n        @media (min-width: 400px) {\n          font-size: 1em;\n        }\n      }\n      & > input,\n      & > select,\n      & > textarea {\n        flex: 1;\n        width: 70%;\n        padding: 3px 5px;\n        font-size: 1em;\n        margin-left: 15px;\n        border: 1px solid #ccc;\n        border-radius: 3px;\n      }\n      & > input[type='checkbox'] {\n        margin-top: 7px;\n      }\n      & > div {\n        margin-left: 16px;\n        & > label {\n          display: block;\n          & > input {\n            margin-right: 3px;\n          }\n        }\n      }\n      & > span {\n        line-height: 32px;\n        margin-left: 10px;\n        color: #800;\n        font-weight: bold;\n      }\n    }\n    & > .buttons {\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: center;\n      margin-top: 15px;\n    }\n    button {\n      margin: 0 10px;\n      &[type='submit'] {\n        ${btnPrimary};\n      }\n      &[type='button'] {\n        ${btnDefault};\n      }\n    }\n    pre {\n      border: 1px solid #ccc;\n      background: rgba(0, 0, 0, 0.1);\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\n      padding: 20px;\n    }\n  }\n`\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport Styles from \"./styles\";\nimport { Form, Field } from \"react-final-form\";\nimport { Link } from \"react-router-dom\";\nconst Recaptcha = require(\"react-recaptcha\");\n\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst onSubmit = async (values) => {\n  await sleep(300);\n\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nconst required = (value) => (value ? undefined : \"Required\");\nconst mustBeNumber = (value) => (isNaN(value) ? \"Must be a number\" : undefined);\nconst mustBeEmail = (value) => (!value.includes(\"@\") ? \"Invalid\" : undefined);\nconst mustBePhone = (value) =>\n  isNaN(value) || value.length > 7 || value.length < 7 ? \"Invalid\" : undefined;\nconst maxLength = (value) =>\n  value.length > 40 ? \"< 40 Char Required\" : undefined;\nconst zipLength = (value) =>\n  value.length > 5 || value.length < 5 || isNaN(value) ? \"Invalid\" : undefined;\nconst minValue = (min) => (value) =>\n  isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`;\nconst composeValidators = (...validators) => (value) =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n\n// specifying your onload callback function\nvar callback = function() {\n  console.log(\"Done!!!!\");\n};\n\n// specifying verify callback function\nvar verifyCallback = function(response) {\n  console.log(response);\n};\n\nconst InputForm = (props) => (\n  <Styles>\n    <Form\n      onSubmit={(data) => props.submit(data)}\n      render={({ handleSubmit, form, submitting, pristine, values }) => (\n        <form onSubmit={handleSubmit}>\n          <Field\n            name=\"firstName\"\n            component=\"input\"\n            validate={composeValidators(required, maxLength)}\n          >\n            {({ input, meta }) => (\n              <div>\n                <label>First Name*</label>\n                <input {...input} type=\"text\" placeholder=\"First Name\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <div>\n            <label>Birthdate*</label>\n            <Field\n              name=\"birthMonth\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Month\"\n              validate={composeValidators(required, mustBeNumber)}\n            />\n            <Field\n              name=\"birthDay\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Day\"\n              validate={composeValidators(required, mustBeNumber)}\n            />\n            <Field\n              name=\"birthYear\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Year\"\n              validate={composeValidators(required, mustBeNumber)}\n            />\n          </div>\n          \n          <Field\n            name=\"lastName\"\n            component=\"input\"\n            validate={composeValidators(required, maxLength)}\n          >\n            {({ input, meta }) => (\n              <div>\n                <label>Last Name*</label>\n                <input {...input} type=\"text\" placeholder=\"Last Name\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <Field\n            name=\"address\"\n            component=\"input\"\n            validate={composeValidators(required, maxLength)}\n          >\n            {({ input, meta }) => (\n              <div>\n                <label>Address*</label>\n                <input {...input} type=\"text\" placeholder=\"Address\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <Field\n            name=\"zip\"\n            component=\"input\"\n            validate={composeValidators(required, zipLength)}\n          >\n            {({ input, meta }) => (\n              <div>\n                <label>Zip*</label>\n                <input {...input} type=\"text\" placeholder=\"Zip\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <div>\n            <label>Education</label>\n            <Field name=\"education\" component=\"select\">\n              <option />\n              <option>High School</option>\n              <option>College</option>\n              <option>Graduate</option>\n              <option>Ph.D</option>\n            </Field>\n          </div>\n          <div>\n            <label>Height</label>\n            <Field\n              name=\"heightFeet\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"(ft)\"\n            />\n            <Field\n              name=\"heightInches\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"(in)\"\n            />\n          </div>\n          <Field\n            name=\"phoneNumber\"\n            component=\"input\"\n            validate={composeValidators(required, mustBePhone)}\n          >\n            {({ input, meta }) => (\n              <div>\n                <label>Phone*</label>\n                <input {...input} type=\"text\" placeholder=\"Phone #\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n\n          <Field\n            name=\"email\"\n            component=\"input\"\n            validate={composeValidators(required, mustBeEmail)}\n          >\n            {({ input, meta }) => (\n              <div>\n                <label>Email*</label>\n                <input {...input} type=\"text\" placeholder=\"Email\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <div>\n            <label>I Agree to Terms*</label>\n            <Field name=\"termsConditions\" component=\"input\" type=\"checkbox\" />\n          </div>\n          <div className=\"buttons\">\n            <button type=\"submit\" disabled={submitting || pristine}>\n              Submit\n            </button>\n            <button\n              type=\"button\"\n              onClick={form.reset}\n              disabled={submitting || pristine}\n            >\n              Reset\n            </button>\n          </div>\n          <Recaptcha\n            sitekey=\"6Lfq3rMZAAAAAO8DbodP0iH67juV03gtQzc1w5s4\"\n            render=\"explicit\"\n            hl={\"ja\"}\n            theme=\"dark\"\n            verifyCallback={verifyCallback}\n            onloadCallback={callback}\n          />\n          {/* <pre>{JSON.stringify(values, 0, 2)}</pre> */}\n        </form>\n      )}\n    />\n  </Styles>\n);\n\nexport default InputForm;\n","import React, { Component } from \"react\";\nimport { withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport styled from \"styled-components\";\n\nconst MapWrapper = styled.div`\n  width: 30%;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  align-items: center;\n`;\n\nclass Map extends Component {\n  render() {\n    const GoogleMapExample = withGoogleMap((props) => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      ></GoogleMap>\n    ));\n    return (\n      <MapWrapper>\n        <GoogleMapExample\n          containerElement={<div style={{ height: `500px`, width: \"500px\" }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </MapWrapper>\n    );\n  }\n}\nexport default Map;\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport Styles from \"./styles\";\nimport { Form, Field } from \"react-final-form\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components/macro\";\n\nconst Split = styled.div`\n  // padding: 12px;\n  // padding-right: 6px;\n  width: 100%;\n  display: grid;\n  margin-left: auto;\n  margin-right: auto;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  grid-gap: 10px;\n  border: 2px black solid;\n  margin-bottom: 8px;\n  @media (min-width: 600px) {\n    font-size: 1em;\n    width: 50%;\n  }\n  \n`;\n\nconst SplitContent = styled.p`\n  font-size: 20px;\n  // padding: 12px;\n  text-align: center;\n  width: 100%;\n  // border: 2px black solid\n`;\n\nconst TextWrapper = styled.div`\n  width: 100%;\n`;\n\n//foreground\n//activeBackground\n\nconst Submit = (props) => {\n  console.log(props);\n  const name = props.data.firstName + \" \" + props.data.lastName;\n  const address = props.data.address + \" \" + props.data.zip;\n  const phoneNumber = props.data.phoneNumber;\n  const email = props.data.email;\n  const birthDay =\n    props.data.birthMonth.toString() +\n    \"/\" +\n    props.data.birthDay.toString() +\n    \"/\" +\n    props.data.birthYear.toString();\n  const education =\n    props.data.education !== undefined ? props.data.education : \"None\";\n  const height =\n    props.data.heightFeet !== undefined\n      ? props.data.heightFeet.toString() + \"'\" + props.data.heightInches + '\"'\n      : \"None\";\n\n  return (\n    // <Styles>\n    <>\n      <h1>Results verification page {name}</h1>\n      <Split>\n        <SplitContent>Name</SplitContent>\n        <SplitContent>{name}</SplitContent>\n      </Split>\n      <Split>\n        <SplitContent>Birth Day</SplitContent>\n        <SplitContent>{birthDay}</SplitContent>\n      </Split>\n      <Split>\n\n      <SplitContent>Height</SplitContent>\n      <SplitContent>{height}</SplitContent>\n      </Split>\n\n      <Split>\n        <SplitContent>address</SplitContent>\n        <SplitContent>{address}</SplitContent>\n      </Split>\n      <Split>\n        <SplitContent>Email</SplitContent>\n        <SplitContent>{email}</SplitContent>\n      </Split>\n      <Split>\n        <SplitContent>Phone</SplitContent>\n        <SplitContent>{phoneNumber}</SplitContent>\n      </Split>\n      <Split>\n        <SplitContent>Education</SplitContent>\n        <SplitContent>{education}</SplitContent>\n        {/* <pre>{JSON.stringify(props, 0, 2)}</pre> */}\n      </Split>\n    </>\n  );\n};\n\nexport default Submit;\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport \"./App.css\";\r\nimport ButtonAppBar from \"./components/AppBar\";\r\nimport InputForm from \"./components/InputForm\";\r\nimport Map from \"./components/Map\";\r\nimport styled from \"styled-components\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport Submit from \"./components/Submit\";\r\n\r\nconst MapWrapper = styled.div`\r\n  width: 100%;\r\n  // justify-content: center;\r\n  // align-items: center;\r\n`;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData: {\r\n        firstName: \"Jaren\",\r\n        birthMonth: \"1\",\r\n        birthDay: \"1\",\r\n        birthYear: \"1\",\r\n        lastName: \"Lynch\",\r\n        zip: \"94109\",\r\n        address: \"745 hyde street\",\r\n        phoneNumber: \"1122298\",\r\n        email: \"jaren.d.lynch@gmail.com\",\r\n      },\r\n    };\r\n  }\r\n\r\n  // history = useHistory();\r\n  onSubmit = (data) => {\r\n    console.log(data);\r\n    this.setState({\r\n      formData: data,\r\n    });\r\n    this.props.history.push(\"/submit\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Route component={ButtonAppBar} />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            // onChange={this.handleNotifications()}\r\n            component={() => <InputForm submit={this.onSubmit} />}\r\n          />\r\n          <Route\r\n            path=\"/submit\"\r\n            // onChange={this.handleNotifications()}\r\n            component={() => (\r\n              <>\r\n                <Submit data={this.state.formData} />\r\n                <MapWrapper>\r\n                  <Map formData={this.state.formData} />\r\n                </MapWrapper>\r\n              </>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}